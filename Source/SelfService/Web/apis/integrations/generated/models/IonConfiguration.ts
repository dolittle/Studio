/* tslint:disable */
/* eslint-disable */
/**
 * Dolittle.Bridge.M3
 * Bridge API - made for Dolittle Studio
 *
 * The version of the OpenAPI document: 1.0.0.0
 * Contact: dolittle@dolittle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IonConfiguration
 */
export interface IonConfiguration {
    /**
     * 
     * @type {string}
     * @memberof IonConfiguration
     */
    gatewayUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfiguration
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfiguration
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfiguration
     */
    clientId?: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfiguration
     */
    clientSecret?: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfiguration
     */
    oauthTokenUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfiguration
     */
    byUser?: string;
}

/**
 * Check if a given object implements the IonConfiguration interface.
 */
export function instanceOfIonConfiguration(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IonConfigurationFromJSON(json: any): IonConfiguration {
    return IonConfigurationFromJSONTyped(json, false);
}

export function IonConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): IonConfiguration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'gatewayUrl': !exists(json, 'gatewayUrl') ? undefined : json['gatewayUrl'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'clientId': !exists(json, 'clientId') ? undefined : json['clientId'],
        'clientSecret': !exists(json, 'clientSecret') ? undefined : json['clientSecret'],
        'oauthTokenUrl': !exists(json, 'oauthTokenUrl') ? undefined : json['oauthTokenUrl'],
        'byUser': !exists(json, 'byUser') ? undefined : json['byUser'],
    };
}

export function IonConfigurationToJSON(value?: IonConfiguration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'gatewayUrl': value.gatewayUrl,
        'username': value.username,
        'password': value.password,
        'clientId': value.clientId,
        'clientSecret': value.clientSecret,
        'oauthTokenUrl': value.oauthTokenUrl,
        'byUser': value.byUser,
    };
}

