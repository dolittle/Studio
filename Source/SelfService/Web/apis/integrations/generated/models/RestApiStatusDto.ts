/* tslint:disable */
/* eslint-disable */
/**
 * Aigonix.Bridge.M3
 * Bridge API - made for Aigonix Studio
 *
 * The version of the OpenAPI document: 0.0.1.351
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RestApiServiceStatus } from './RestApiServiceStatus';
import {
    RestApiServiceStatusFromJSON,
    RestApiServiceStatusFromJSONTyped,
    RestApiServiceStatusToJSON,
} from './RestApiServiceStatus';
import type { RestApiTargetStatus } from './RestApiTargetStatus';
import {
    RestApiTargetStatusFromJSON,
    RestApiTargetStatusFromJSONTyped,
    RestApiTargetStatusToJSON,
} from './RestApiTargetStatus';

/**
 * 
 * @export
 * @interface RestApiStatusDto
 */
export interface RestApiStatusDto {
    /**
     * 
     * @type {RestApiTargetStatus}
     * @memberof RestApiStatusDto
     */
    target?: RestApiTargetStatus;
    /**
     * 
     * @type {RestApiServiceStatus}
     * @memberof RestApiStatusDto
     */
    service?: RestApiServiceStatus;
    /**
     * 
     * @type {string}
     * @memberof RestApiStatusDto
     */
    basePath?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof RestApiStatusDto
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof RestApiStatusDto
     */
    updatedBy?: string | null;
}

/**
 * Check if a given object implements the RestApiStatusDto interface.
 */
export function instanceOfRestApiStatusDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RestApiStatusDtoFromJSON(json: any): RestApiStatusDto {
    return RestApiStatusDtoFromJSONTyped(json, false);
}

export function RestApiStatusDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestApiStatusDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'target': !exists(json, 'target') ? undefined : RestApiTargetStatusFromJSON(json['target']),
        'service': !exists(json, 'service') ? undefined : RestApiServiceStatusFromJSON(json['service']),
        'basePath': !exists(json, 'basePath') ? undefined : json['basePath'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (json['updatedAt'] === null ? null : new Date(json['updatedAt'])),
        'updatedBy': !exists(json, 'updatedBy') ? undefined : json['updatedBy'],
    };
}

export function RestApiStatusDtoToJSON(value?: RestApiStatusDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'target': RestApiTargetStatusToJSON(value.target),
        'service': RestApiServiceStatusToJSON(value.service),
        'basePath': value.basePath,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt === null ? null : value.updatedAt.toISOString()),
        'updatedBy': value.updatedBy,
    };
}

