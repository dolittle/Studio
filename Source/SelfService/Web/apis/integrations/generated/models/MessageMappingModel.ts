/* tslint:disable */
/* eslint-disable */
/**
 * Dolittle.Bridge.M3
 * Bridge API - made for Dolittle Studio
 *
 * The version of the OpenAPI document: 1.0.0.0
 * Contact: dolittle@dolittle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReadModelMetadata } from './ReadModelMetadata';
import {
    ReadModelMetadataFromJSON,
    ReadModelMetadataFromJSONTyped,
    ReadModelMetadataToJSON,
} from './ReadModelMetadata';

/**
 * 
 * @export
 * @interface MessageMappingModel
 */
export interface MessageMappingModel {
    /**
     * 
     * @type {string}
     * @memberof MessageMappingModel
     */
    id?: string | null;
    /**
     * 
     * @type {ReadModelMetadata}
     * @memberof MessageMappingModel
     */
    metadata?: ReadModelMetadata;
}

/**
 * Check if a given object implements the MessageMappingModel interface.
 */
export function instanceOfMessageMappingModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MessageMappingModelFromJSON(json: any): MessageMappingModel {
    return MessageMappingModelFromJSONTyped(json, false);
}

export function MessageMappingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageMappingModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'metadata': !exists(json, 'metadata') ? undefined : ReadModelMetadataFromJSON(json['metadata']),
    };
}

export function MessageMappingModelToJSON(value?: MessageMappingModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'metadata': ReadModelMetadataToJSON(value.metadata),
    };
}

