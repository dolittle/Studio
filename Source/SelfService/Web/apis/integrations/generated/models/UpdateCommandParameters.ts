/* tslint:disable */
/* eslint-disable */
/**
 * Aigonix.Bridge.M3
 * Bridge API - made for Aigonix Studio
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MappedParameter } from './MappedParameter';
import {
    MappedParameterFromJSON,
    MappedParameterFromJSONTyped,
    MappedParameterToJSON,
} from './MappedParameter';

/**
 * Body of a request to set a command mapping.
 * @export
 * @interface UpdateCommandParameters
 */
export interface UpdateCommandParameters {
    /**
     * 
     * @type {Array<MappedParameter>}
     * @memberof UpdateCommandParameters
     */
    parameters: Array<MappedParameter>;
}

/**
 * Check if a given object implements the UpdateCommandParameters interface.
 */
export function instanceOfUpdateCommandParameters(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "parameters" in value;

    return isInstance;
}

export function UpdateCommandParametersFromJSON(json: any): UpdateCommandParameters {
    return UpdateCommandParametersFromJSONTyped(json, false);
}

export function UpdateCommandParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCommandParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'parameters': ((json['parameters'] as Array<any>).map(MappedParameterFromJSON)),
    };
}

export function UpdateCommandParametersToJSON(value?: UpdateCommandParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'parameters': ((value.parameters as Array<any>).map(MappedParameterToJSON)),
    };
}

