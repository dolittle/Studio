/* tslint:disable */
/* eslint-disable */
/**
 * Aigonix.Bridge.M3
 * Bridge API - made for Aigonix Studio
 *
 * The version of the OpenAPI document: 0.0.1.356
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WebhookServiceStatus } from './WebhookServiceStatus';
import {
    WebhookServiceStatusFromJSON,
    WebhookServiceStatusFromJSONTyped,
    WebhookServiceStatusToJSON,
} from './WebhookServiceStatus';
import type { WebhookTargetStatus } from './WebhookTargetStatus';
import {
    WebhookTargetStatusFromJSON,
    WebhookTargetStatusFromJSONTyped,
    WebhookTargetStatusToJSON,
} from './WebhookTargetStatus';

/**
 * 
 * @export
 * @interface WebhookStatusDto
 */
export interface WebhookStatusDto {
    /**
     * 
     * @type {WebhookTargetStatus}
     * @memberof WebhookStatusDto
     */
    target?: WebhookTargetStatus;
    /**
     * 
     * @type {WebhookServiceStatus}
     * @memberof WebhookStatusDto
     */
    service?: WebhookServiceStatus;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusDto
     */
    basePath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusDto
     */
    username?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusDto
     */
    password?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof WebhookStatusDto
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusDto
     */
    updatedBy?: string | null;
}

/**
 * Check if a given object implements the WebhookStatusDto interface.
 */
export function instanceOfWebhookStatusDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebhookStatusDtoFromJSON(json: any): WebhookStatusDto {
    return WebhookStatusDtoFromJSONTyped(json, false);
}

export function WebhookStatusDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookStatusDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'target': !exists(json, 'target') ? undefined : WebhookTargetStatusFromJSON(json['target']),
        'service': !exists(json, 'service') ? undefined : WebhookServiceStatusFromJSON(json['service']),
        'basePath': !exists(json, 'basePath') ? undefined : json['basePath'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (json['updatedAt'] === null ? null : new Date(json['updatedAt'])),
        'updatedBy': !exists(json, 'updatedBy') ? undefined : json['updatedBy'],
    };
}

export function WebhookStatusDtoToJSON(value?: WebhookStatusDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'target': WebhookTargetStatusToJSON(value.target),
        'service': WebhookServiceStatusToJSON(value.service),
        'basePath': value.basePath,
        'username': value.username,
        'password': value.password,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt === null ? null : value.updatedAt.toISOString()),
        'updatedBy': value.updatedBy,
    };
}

