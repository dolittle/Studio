/* tslint:disable */
/* eslint-disable */
/**
 * Dolittle.Bridge.M3
 * Bridge API - made for Dolittle Studio
 *
 * The version of the OpenAPI document: 1.0.0.0
 * Contact: dolittle@dolittle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FieldMapping } from './FieldMapping';
import {
    FieldMappingFromJSON,
    FieldMappingFromJSONTyped,
    FieldMappingToJSON,
} from './FieldMapping';

/**
 * 
 * @export
 * @interface SetMessageMappingRequestArguments
 */
export interface SetMessageMappingRequestArguments {
    /**
     * 
     * @type {string}
     * @memberof SetMessageMappingRequestArguments
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SetMessageMappingRequestArguments
     */
    description?: string | null;
    /**
     * 
     * @type {Array<FieldMapping>}
     * @memberof SetMessageMappingRequestArguments
     */
    fields?: Array<FieldMapping> | null;
}

/**
 * Check if a given object implements the SetMessageMappingRequestArguments interface.
 */
export function instanceOfSetMessageMappingRequestArguments(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SetMessageMappingRequestArgumentsFromJSON(json: any): SetMessageMappingRequestArguments {
    return SetMessageMappingRequestArgumentsFromJSONTyped(json, false);
}

export function SetMessageMappingRequestArgumentsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetMessageMappingRequestArguments {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'fields': !exists(json, 'fields') ? undefined : (json['fields'] === null ? null : (json['fields'] as Array<any>).map(FieldMappingFromJSON)),
    };
}

export function SetMessageMappingRequestArgumentsToJSON(value?: SetMessageMappingRequestArguments | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'fields': value.fields === undefined ? undefined : (value.fields === null ? null : (value.fields as Array<any>).map(FieldMappingToJSON)),
    };
}

