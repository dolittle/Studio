/* tslint:disable */
/* eslint-disable */
/**
 * Aigonix.Bridge.M3
 * Bridge API - made for Aigonix Studio
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProgramMetadataHeader } from './ProgramMetadataHeader';
import {
    ProgramMetadataHeaderFromJSON,
    ProgramMetadataHeaderFromJSONTyped,
    ProgramMetadataHeaderToJSON,
} from './ProgramMetadataHeader';

/**
 * 
 * @export
 * @interface ConnectionPrograms
 */
export interface ConnectionPrograms {
    /**
     * 
     * @type {Array<ProgramMetadataHeader>}
     * @memberof ConnectionPrograms
     */
    programs?: Array<ProgramMetadataHeader>;
    /**
     * 
     * @type {number}
     * @memberof ConnectionPrograms
     */
    totalResults?: number;
}

/**
 * Check if a given object implements the ConnectionPrograms interface.
 */
export function instanceOfConnectionPrograms(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConnectionProgramsFromJSON(json: any): ConnectionPrograms {
    return ConnectionProgramsFromJSONTyped(json, false);
}

export function ConnectionProgramsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectionPrograms {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'programs': !exists(json, 'programs') ? undefined : ((json['programs'] as Array<any>).map(ProgramMetadataHeaderFromJSON)),
        'totalResults': !exists(json, 'totalResults') ? undefined : json['totalResults'],
    };
}

export function ConnectionProgramsToJSON(value?: ConnectionPrograms | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'programs': value.programs === undefined ? undefined : ((value.programs as Array<any>).map(ProgramMetadataHeaderToJSON)),
        'totalResults': value.totalResults,
    };
}

