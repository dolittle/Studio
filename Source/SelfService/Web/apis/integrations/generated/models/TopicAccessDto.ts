/* tslint:disable */
/* eslint-disable */
/**
 * Aigonix.Bridge.M3
 * Bridge API - made for Aigonix Studio
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TopicAccess } from './TopicAccess';
import {
    TopicAccessFromJSON,
    TopicAccessFromJSONTyped,
    TopicAccessToJSON,
} from './TopicAccess';

/**
 * 
 * @export
 * @interface TopicAccessDto
 */
export interface TopicAccessDto {
    /**
     * 
     * @type {string}
     * @memberof TopicAccessDto
     */
    topicName?: string;
    /**
     * 
     * @type {TopicAccess}
     * @memberof TopicAccessDto
     */
    access?: TopicAccess;
}

/**
 * Check if a given object implements the TopicAccessDto interface.
 */
export function instanceOfTopicAccessDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TopicAccessDtoFromJSON(json: any): TopicAccessDto {
    return TopicAccessDtoFromJSONTyped(json, false);
}

export function TopicAccessDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopicAccessDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'topicName': !exists(json, 'topicName') ? undefined : json['topicName'],
        'access': !exists(json, 'access') ? undefined : TopicAccessFromJSON(json['access']),
    };
}

export function TopicAccessDtoToJSON(value?: TopicAccessDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'topicName': value.topicName,
        'access': TopicAccessToJSON(value.access),
    };
}

