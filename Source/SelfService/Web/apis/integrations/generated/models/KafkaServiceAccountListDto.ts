/* tslint:disable */
/* eslint-disable */
/**
 * Aigonix.Bridge.M3
 * Bridge API - made for Aigonix Studio
 *
 * The version of the OpenAPI document: 0.0.1.301
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TopicAccessDto } from './TopicAccessDto';
import {
    TopicAccessDtoFromJSON,
    TopicAccessDtoFromJSONTyped,
    TopicAccessDtoToJSON,
} from './TopicAccessDto';

/**
 * 
 * @export
 * @interface KafkaServiceAccountListDto
 */
export interface KafkaServiceAccountListDto {
    /**
     * 
     * @type {string}
     * @memberof KafkaServiceAccountListDto
     */
    serviceAccountName?: string;
    /**
     * 
     * @type {string}
     * @memberof KafkaServiceAccountListDto
     */
    kafkaUserId?: string;
    /**
     * 
     * @type {string}
     * @memberof KafkaServiceAccountListDto
     */
    createdBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof KafkaServiceAccountListDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof KafkaServiceAccountListDto
     */
    description?: string | null;
    /**
     * 
     * @type {Array<TopicAccessDto>}
     * @memberof KafkaServiceAccountListDto
     */
    topics?: Array<TopicAccessDto> | null;
    /**
     * 
     * @type {Date}
     * @memberof KafkaServiceAccountListDto
     */
    certificateExpiry?: Date | null;
}

/**
 * Check if a given object implements the KafkaServiceAccountListDto interface.
 */
export function instanceOfKafkaServiceAccountListDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function KafkaServiceAccountListDtoFromJSON(json: any): KafkaServiceAccountListDto {
    return KafkaServiceAccountListDtoFromJSONTyped(json, false);
}

export function KafkaServiceAccountListDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): KafkaServiceAccountListDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'serviceAccountName': !exists(json, 'serviceAccountName') ? undefined : json['serviceAccountName'],
        'kafkaUserId': !exists(json, 'kafkaUserId') ? undefined : json['kafkaUserId'],
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'topics': !exists(json, 'topics') ? undefined : (json['topics'] === null ? null : (json['topics'] as Array<any>).map(TopicAccessDtoFromJSON)),
        'certificateExpiry': !exists(json, 'certificateExpiry') ? undefined : (json['certificateExpiry'] === null ? null : new Date(json['certificateExpiry'])),
    };
}

export function KafkaServiceAccountListDtoToJSON(value?: KafkaServiceAccountListDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'serviceAccountName': value.serviceAccountName,
        'kafkaUserId': value.kafkaUserId,
        'createdBy': value.createdBy,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'description': value.description,
        'topics': value.topics === undefined ? undefined : (value.topics === null ? null : (value.topics as Array<any>).map(TopicAccessDtoToJSON)),
        'certificateExpiry': value.certificateExpiry === undefined ? undefined : (value.certificateExpiry === null ? null : value.certificateExpiry.toISOString()),
    };
}

