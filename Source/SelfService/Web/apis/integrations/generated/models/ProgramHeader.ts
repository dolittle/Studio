/* tslint:disable */
/* eslint-disable */
/**
 * Aigonix.Bridge.M3
 * Bridge API - made for Dolittle Studio
 *
 * The version of the OpenAPI document: 1.0.0.0
 * Contact: dolittle@dolittle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProgramHeader
 */
export interface ProgramHeader {
    /**
     * 
     * @type {string}
     * @memberof ProgramHeader
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ProgramHeader
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ProgramHeader
     */
    component?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ProgramHeader
     */
    loaded?: boolean;
}

/**
 * Check if a given object implements the ProgramHeader interface.
 */
export function instanceOfProgramHeader(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProgramHeaderFromJSON(json: any): ProgramHeader {
    return ProgramHeaderFromJSONTyped(json, false);
}

export function ProgramHeaderFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProgramHeader {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'component': !exists(json, 'component') ? undefined : json['component'],
        'loaded': !exists(json, 'loaded') ? undefined : json['loaded'],
    };
}

export function ProgramHeaderToJSON(value?: ProgramHeader | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'component': value.component,
        'loaded': value.loaded,
    };
}

