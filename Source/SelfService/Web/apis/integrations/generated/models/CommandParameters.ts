/* tslint:disable */
/* eslint-disable */
/**
 * Aigonix.Bridge.M3
 * Bridge API - made for Aigonix Studio
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MappedParameter } from './MappedParameter';
import {
    MappedParameterFromJSON,
    MappedParameterFromJSONTyped,
    MappedParameterToJSON,
} from './MappedParameter';

/**
 * 
 * @export
 * @interface CommandParameters
 */
export interface CommandParameters {
    /**
     * Command Mapped parameters
     * @type {Array<MappedParameter>}
     * @memberof CommandParameters
     */
    parameters?: Array<MappedParameter>;
}

/**
 * Check if a given object implements the CommandParameters interface.
 */
export function instanceOfCommandParameters(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommandParametersFromJSON(json: any): CommandParameters {
    return CommandParametersFromJSONTyped(json, false);
}

export function CommandParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommandParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'parameters': !exists(json, 'parameters') ? undefined : ((json['parameters'] as Array<any>).map(MappedParameterFromJSON)),
    };
}

export function CommandParametersToJSON(value?: CommandParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'parameters': value.parameters === undefined ? undefined : ((value.parameters as Array<any>).map(MappedParameterToJSON)),
    };
}

