/* tslint:disable */
/* eslint-disable */
/**
 * Dolittle.Bridge.M3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IonConfigDto
 */
export interface IonConfigDto {
    /**
     * 
     * @type {string}
     * @memberof IonConfigDto
     */
    iu: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfigDto
     */
    pu: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfigDto
     */
    ot: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfigDto
     */
    saak: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfigDto
     */
    sask: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfigDto
     */
    ci: string;
    /**
     * 
     * @type {string}
     * @memberof IonConfigDto
     */
    cs: string;
}

/**
 * Check if a given object implements the IonConfigDto interface.
 */
export function instanceOfIonConfigDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "iu" in value;
    isInstance = isInstance && "pu" in value;
    isInstance = isInstance && "ot" in value;
    isInstance = isInstance && "saak" in value;
    isInstance = isInstance && "sask" in value;
    isInstance = isInstance && "ci" in value;
    isInstance = isInstance && "cs" in value;

    return isInstance;
}

export function IonConfigDtoFromJSON(json: any): IonConfigDto {
    return IonConfigDtoFromJSONTyped(json, false);
}

export function IonConfigDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): IonConfigDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'iu': json['iu'],
        'pu': json['pu'],
        'ot': json['ot'],
        'saak': json['saak'],
        'sask': json['sask'],
        'ci': json['ci'],
        'cs': json['cs'],
    };
}

export function IonConfigDtoToJSON(value?: IonConfigDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'iu': value.iu,
        'pu': value.pu,
        'ot': value.ot,
        'saak': value.saak,
        'sask': value.sask,
        'ci': value.ci,
        'cs': value.cs,
    };
}

