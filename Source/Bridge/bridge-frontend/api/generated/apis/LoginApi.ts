/* tslint:disable */
/* eslint-disable */
/**
 * Dolittle.Bridge.M3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface LoginCheckGetRequest {
    tenantID?: string;
}

export interface LoginPostRequest {
    passphrase?: string;
    tenantID?: string;
}

/**
 * 
 */
export class LoginApi extends runtime.BaseAPI {

    /**
     */
    async loginCheckGetRaw(requestParameters: LoginCheckGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.tenantID !== undefined && requestParameters.tenantID !== null) {
            headerParameters['Tenant-ID'] = String(requestParameters.tenantID);
        }

        const response = await this.request({
            path: `/Login/check`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async loginCheckGet(requestParameters: LoginCheckGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.loginCheckGetRaw(requestParameters, initOverrides);
    }

    /**
     */
    async loginPostRaw(requestParameters: LoginPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters.passphrase !== undefined) {
            queryParameters['passphrase'] = requestParameters.passphrase;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.tenantID !== undefined && requestParameters.tenantID !== null) {
            headerParameters['Tenant-ID'] = String(requestParameters.tenantID);
        }

        const response = await this.request({
            path: `/Login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async loginPost(requestParameters: LoginPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.loginPostRaw(requestParameters, initOverrides);
    }

}
