/* tslint:disable */
/* eslint-disable */
/**
 * Dolittle.Bridge.M3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  IonConfigDto,
  MetadataPublisherConfigDto,
} from '../models';
import {
    IonConfigDtoFromJSON,
    IonConfigDtoToJSON,
    MetadataPublisherConfigDtoFromJSON,
    MetadataPublisherConfigDtoToJSON,
} from '../models';

export interface ConfigurationIonPostRequest {
    deployment?: string;
    tenantID?: string;
    ionConfigDto?: IonConfigDto;
}

export interface ConfigurationMdpPostRequest {
    tenantID?: string;
    metadataPublisherConfigDto?: MetadataPublisherConfigDto;
}

/**
 * 
 */
export class ConfigurationApi extends runtime.BaseAPI {

    /**
     */
    async configurationIonPostRaw(requestParameters: ConfigurationIonPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters.deployment !== undefined) {
            queryParameters['deployment'] = requestParameters.deployment;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.tenantID !== undefined && requestParameters.tenantID !== null) {
            headerParameters['Tenant-ID'] = String(requestParameters.tenantID);
        }

        const response = await this.request({
            path: `/configuration/ion`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: IonConfigDtoToJSON(requestParameters.ionConfigDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async configurationIonPost(requestParameters: ConfigurationIonPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.configurationIonPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async configurationMdpPostRaw(requestParameters: ConfigurationMdpPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.tenantID !== undefined && requestParameters.tenantID !== null) {
            headerParameters['Tenant-ID'] = String(requestParameters.tenantID);
        }

        const response = await this.request({
            path: `/configuration/mdp`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MetadataPublisherConfigDtoToJSON(requestParameters.metadataPublisherConfigDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async configurationMdpPost(requestParameters: ConfigurationMdpPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.configurationMdpPostRaw(requestParameters, initOverrides);
    }

}
