---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    system: Monitoring
    monitoring: Grafana
    component: Grafana
  name: grafana
  namespace: system-monitoring-grafana
data:
  grafana.ini: |
    [log]
    mode = console
    level = info

    [log.console]
    format = console

    [server]
    protocol = http
    http_port = 3000
    router_logging = false
    enable_gzip = false

    [metrics]
    enabled = true

    [database]
    type = postgres
    host = postgresql.system-monitoring-grafana.svc.cluster.local
    name = grafana
    user = postgres
    password = ${PGPASSWORD}
    ssl_mode = disable
    max_open_conn = 20
    max_idle_conn = 4

    [remote_cache]
    type = database

    [dataproxy]
    logging = false
    timeout = 30

    [analytics]
    reporting_enabled = false
    check_for_updates = true

    [security]
    disable_initial_admin_creation = false
    disable_gravatar = true
    cookie_secure = true
    cookie_samesite = lax

    [snapshots]
    external_enabled = false

    [dashboards]
    versions_to_keep = 20
    min_refresh_interval = 1m

    [auth]
    login_cookie_name = grafana_session
    login_maximum_inactive_lifetime_duration = 1h
    login_maximum_lifetime_duration = 1d
    disable_login_form = false
    oauth_auto_login = true

    [auth.anonymous]
    enabled = false
    org_role = Admin

    [users]
    allow_sign_up = false
    allow_org_create = false
    auto_assign_org = true
    auto_assign_org_id = 1
    auto_assign_org_role = Viewer
    verify_email_enabled = false
    default_theme = dark
    viewers_can_edit = false
    editors_can_admin = false

    [quota]
    enabled = false

    [smtp]
    enabled = false

    [alerting]
    enabled = false

    [explore]
    enabled = true

    [paths]
    provisioning = /etc/grafana/provisioning

  datasource.yml: |
    apiVersion: 1

    datasources:
      - name: prometheus
        type: prometheus
        access: proxy
        url: http://query-frontend.system-monitoring-metrics.svc.cluster.local:8080/prometheus
        jsonData:
            httpHeaderName1: X-Scope-OrgID
        secureJsonData:
            httpHeaderValue1: system
      - name: loki
        type: loki
        access: proxy
        url: http://query-frontend.system-monitoring-logs.svc.cluster.local:8080
        jsonData:
            httpHeaderName1: X-Scope-OrgID
        secureJsonData:
            httpHeaderValue1: system

---
apiVersion: v1
kind: Service
metadata:
  labels:
    system: Monitoring
    monitoring: Grafana
    component: Grafana
  name: grafana
  namespace: system-monitoring-grafana
spec:
  selector:
    system: Monitoring
    monitoring: Grafana
    component: Grafana
  ports:
    - name: http
      port: 80
      targetPort: http-metrics

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    system: Monitoring
    monitoring: Grafana
    component: Grafana
  name: grafana
  namespace: system-monitoring-grafana
spec:
  selector:
    matchLabels:
      system: Monitoring
      monitoring: Grafana
      component: Grafana
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        system: Monitoring
        monitoring: Grafana
        component: Grafana
    spec:
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: name
                    operator: In
                    values:
                      - distributor
      containers:
        - name: grafana
          image: grafana/grafana:7.5.5
          imagePullPolicy: IfNotPresent
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgresql
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: config
              mountPath: /etc/grafana/provisioning/datasources/datasource.yml
              subPath: datasource.yml
          ports:
            - name: http-metrics
              containerPort: 3000
          readinessProbe:
            httpGet:
              path: /robots.txt
              port: http-metrics
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 2
          livenessProbe:
            tcpSocket:
              port: http-metrics
            initialDelaySeconds: 30
          resources:
            limits:
              cpu: 500m
              memory: 1500Mi
            requests:
              cpu: 250m
              memory: 750Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      volumes:
        - name: config
          configMap:
            name: grafana
