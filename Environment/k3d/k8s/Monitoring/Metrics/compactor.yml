apiVersion: v1
kind: Service
metadata:
  namespace: system-monitoring-metrics
  name: compactor
  labels:
    system: Monitoring
    monitoring: Metrics
    service: Compactor
spec:
  ports:
    - port: 8080
      name: http-metrics
      targetPort: http-metrics
  clusterIP: None
  selector:
    system: Monitoring
    monitoring: Metrics
    service: Compactor

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: system-monitoring-metrics
  name: compactor
  labels:
    system: Monitoring
    monitoring: Metrics
    service: Compactor
data:
  compactor.yaml: |
    target: compactor
    auth_enabled: true
    server:
      http_listen_port: 8080
    compactor:
      block_ranges: [2h0m0s,12h0m0s,24h0m0s]
      data_dir: /data/cortext/compactor
      sharding_enabled: false
    storage:
      engine: blocks
    blocks_storage:
      backend: filesystem
      filesystem:
        dir: ""
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: system-monitoring-metrics
  name: compactor
  labels:
    system: Monitoring
    monitoring: Metrics
    service: Compactor
spec:
  selector:
    matchLabels:
      system: Monitoring
      monitoring: Metrics
      service: Compactor
  serviceName: compactor
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        system: Monitoring
        monitoring: Metrics
        service: Compactor
    spec:
      #terminationGracePeriodSeconds: 240
      #affinity:
      #  podAntiAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #      - topologyKey: kubernetes.io/hostname
      #        labelSelector:
      #          matchExpressions:
      #            - key: name
      #              operator: In
      #              values:
      #                - compactor
      containers:
        - name: compactor
          image: quay.io/cortexproject/cortex:v1.6.0
          imagePullPolicy: IfNotPresent
          args:
            - -target=compactor
            - -log.level=debug
            - -config.file=/etc/cortex/compactor.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/cortex
          ports:
            - name: http-metrics
              containerPort: 8080
          # securityContext:
          #   readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 180
            failureThreshold: 20
            periodSeconds: 30
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: config
          configMap:
            name: compactor
