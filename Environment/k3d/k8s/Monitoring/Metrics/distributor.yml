apiVersion: v1
kind: Service
metadata:
  namespace: system-monitoring-metrics
  name: distributor
  labels:
    system: Monitoring
    monitoring: Metrics
    service: Distributor
spec:
  ports:
    - port: 8080
      name: http-metrics
      targetPort: http-metrics
    - port: 8090
      name: remote-write
      targetPort: remote-write
  selector:
    system: Monitoring
    monitoring: Metrics
    service: Distributor

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: system-monitoring-metrics
  name: distributor
  labels:
    system: Monitoring
    monitoring: Metrics
    service: Distributor
data:
  distributor.yaml: |
    target: distributor
    auth_enabled: true
    server:
      http_listen_port: 8080
      grpc_listen_port: 9095
      grpc_server_max_recv_msg_size: 104857600
      grpc_server_max_send_msg_size: 104857600
      grpc_server_max_concurrent_streams: 1000
    limits:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
    distributor:
      shard_by_all_labels: true
      pool:
        health_check_ingesters: true
    ingester_client:
      grpc_client_config:
        max_recv_msg_size: 104857600
        max_send_msg_size: 104857600
        use_gzip_compression: true
    ingester:
      lifecycler:
        ring:
          replication_factor: 1
          kvstore:
            store: memberlist
        join_after: 10s
        observe_period: 10s
        min_ready_duration: 0s
        final_sleep: 5s
        num_tokens: 512
    memberlist:
      bind_port: 7946
      join_members:
        - dnssrvnoa+_memberlist._tcp.ingester.system-monitoring-metrics.svc.cluster.local
      min_join_backoff: 10s
      max_join_retries: 10000
      abort_if_cluster_join_fails: false
      rejoin_interval: 10s
  nginx.conf: |
    worker_processes  5;
    error_log /dev/stderr;
    worker_rlimit_nofile 8192;

    events {
      worker_connections 4096;
    }

    http {
      default_type application/octet-stream;
      access_log /dev/stderr;
      tcp_nopush   on;
      proxy_buffer_size          128k;
      proxy_buffers              4 256k;
      proxy_busy_buffers_size    256k;

      server {
        listen 8090;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        location = /healthz {
          return 200 'alive';
        }

        location / {
            proxy_pass http://localhost:8080;
            proxy_set_header X-Scope-OrgID $remote_user;
        }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: system-monitoring-metrics
  name: distributor
  labels:
    system: Monitoring
    monitoring: Metrics
    service: Distributor
spec:
  selector:
    matchLabels:
      system: Monitoring
      monitoring: Metrics
      service: Distributor
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        system: Monitoring
        monitoring: Metrics
        service: Distributor
    spec:
      #terminationGracePeriodSeconds: 60
      #affinity:
      #  podAntiAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #      - topologyKey: kubernetes.io/hostname
      #        labelSelector:
      #          matchExpressions:
      #            - key: name
      #              operator: In
      #              values:
      #                - distributor
      containers:
        - name: distributor
          image: quay.io/cortexproject/cortex:v1.6.0
          imagePullPolicy: IfNotPresent
          args:
            - -target=distributor
            - -log.level=debug
            - -config.file=/etc/cortex/distributor.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/cortex
          ports:
            - name: http-metrics
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
        - name: proxy
          image: nginx:1.19.6
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          ports:
            - name: remote-write
              containerPort: 8090
          # securityContext:
          #   readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: remote-write
            initialDelaySeconds: 45
          livenessProbe:
            httpGet:
              path: /ready
              port: remote-write
            initialDelaySeconds: 45
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: config
          configMap:
            name: distributor
