apiVersion: v1
kind: ConfigMap
metadata:
  namespace: system-monitoring-logs
  name: canary
  labels:
    system: Monitoring
    monitoring: Logs
    service: Canary
data:
  nginx.conf: |
    error_log /dev/stderr;

    events {
    }

    http {
      access_log /dev/stderr;

      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }

      server {
        listen 8090;

        location = /healthz {
          return 200 'alive';
        }

        location / {
            proxy_pass http://querier-tail.system-monitoring-logs.svc.cluster.local:8080;
            proxy_http_version 1.1;
            proxy_set_header X-Scope-OrgID 'system';
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }
      }
    }

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: system-monitoring-logs
  name: canary
  labels:
    system: Monitoring
    monitoring: Logs
    service: Canary
spec:
  selector:
    matchLabels:
      system: Monitoring
      monitoring: Logs
      service: Canary
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        system: Monitoring
        monitoring: Logs
        service: Canary
    spec:
      containers:
        - name: canary
          image: grafana/loki-canary:2.1.0
          args:
            - -port=8080
            - -addr=localhost:8090
            - -streamname=job
            - -streamvalue=canary
            - -labelname=canary_instance
            - -labelvalue=$(POD_NAME)
            - -size=100
            - -interval=1s
            - -pruneinterval=1m
            - -spot-check-interval=1h
            - -spot-check-max=480h
            - -spot-check-query-rate=10m
            - -metric-test-interval=1h
            - -metric-test-range=24h
            - -wait=1m
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: http-metrics
              containerPort: 8080
          securityContext:
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /metrics
              port: http-metrics
            initialDelaySeconds: 15
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
        - name: proxy
          image: nginx:1.19.6
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          ports:
            - name: http-proxy
              containerPort: 8090
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-proxy
            initialDelaySeconds: 15
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
      volumes:
        - name: config
          configMap:
            name: canary