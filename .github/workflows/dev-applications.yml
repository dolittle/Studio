name: Applications - Build and deploy

env:
  PRERELEASE_BRANCHES: experimental,alpha,beta,rc
  SOURCE_PATH: 'Source/Applications'
  DEPLOYMENT_NAME: 'studio-dev-applications'
  DOCKER_IMAGE_TAG: 'dolittle/studio/applications'
  DOCKER_FILE: 'Source/Applications/Dockerfile'

on:
  push:
    branches:
    - '**'
    paths:
    - 'Source/Applications/**'
  pull_request:
    types: [closed]

jobs:
  changes:
    runs-on: ubuntu-latest

    outputs:
      has-changes: ${{ steps.filter.outputs.src }}

    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            src:
              - '${{ env.SOURCE_PATH }}/**'

  build:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.has-changes == 'true' }}

    steps:
    - name: Setup node v12
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
        registry-url: 'https://registry.npmjs.org'
    - name: Build
      run: |
        yarn
        cd Source/Applications/Web
        yarn build

  conditionalDeploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Establish context
      id: context
      uses: dolittle/establish-context-action@v2
      with:
        version-file: '${{ env.SOURCE_PATH }}/version.json'
        prerelease-branches: ${{ env.PRERELEASE_BRANCHES }}

    - name: Increment version
      id: increment-version
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      uses: dolittle/increment-version-action@v2
      with:
        version: ${{ steps.context.outputs.current-version }}
        release-type: ${{ steps.context.outputs.release-type }}

    - name: Invoke deploy
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: DeployMicroservice
        token: ${{ secrets.PERSONAL_TOKEN }}
        ref: ${{ github.event.sha }}
        inputs: '{ "dockerfile":"${{ env.DOCKER_FILE }}", "docker-image-tag":"${{ env.DOCKER_IMAGE_TAG }}", "deployment": "${{ env.DEPLOYMENT_NAME }}", "version": "${{ steps.increment-version.outputs.next-version }}", "source-path": "${{ env.SOURCE_PATH }}" }'